{"version":3,"sources":["tempList.js","components/Recepie.js","components/ReceipeSearch.js","components/ReceipeList.js","tempDetails.js","components/ReceipeDetails.js","App.js","serviceWorker.js","index.js"],"names":["recipes","recipe_id","image_url","title","publisher","source_url","Recepie","_this$props$recipe","this","props","recipe","handleDetails","react_default","a","createElement","Fragment","className","src","style","height","alt","type","onClick","href","target","rel","Component","ReceipeSearch","_this$props","value","handleSubmit","handleChange","onSubmit","htmlFor","name","placeholder","onChange","ReceipeList","error","components_ReceipeSearch","map","components_Recepie","key","f2f_url","ingredients","publisher_url","ReceipeDetails","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","url","concat","id","fetch","data","json","jsonData","setState","console","log","_context","t0","_this$state$recipe","handleIndex","item","index","App","base_url","details_id","pageIndex","search","query","displayPage","components_ReceipeList","components_ReceipeDetails","e","preventDefault","_this$state","getRecipes","length","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b7e7f415.chunk.js","sourcesContent":["export const recipes = [\n  {\n    recipe_id: 35382,\n    image_url:\n      \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\n    title: \"Jalapeno Popper Grilled Cheese Sandwich\",\n    publisher: \"Closet Cooking\",\n    source_url:\n      \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\n  },\n  {\n    recipe_id: 35383,\n    image_url:\n      \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\n    title: \"Jalapeno Popper Grilled Cheese Sandwich\",\n    publisher: \"Closet Cooking\",\n    source_url:\n      \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\n  },\n  {\n    recipe_id: 35384,\n    image_url:\n      \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\n    title: \"Jalapeno Popper Grilled Cheese Sandwich\",\n    publisher: \"Closet Cooking\",\n    source_url:\n      \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\n  }\n];\n","import React, { Component } from 'react'\r\n\r\n class Recepie extends Component {\r\n    render() {\r\n        //console.log(this.props.recipe)\r\n        const {\r\n            image_url,\r\n            title,\r\n            source_url,\r\n            publisher,\r\n            recipe_id\r\n        } = this.props.recipe;\r\nconst{ handleDetails}=this.props;\r\n\r\n        return (\r\n           <React.Fragment>\r\n             <div className=\"col-10 mx-auto col-md-6 col-lg-4 my-3\">\r\n                 <div className=\"card\">\r\n                     <img src={image_url} \r\n                     className=\"img-card-top\"\r\n                     style={{height:\"14rem\"}}\r\n                     alt=\"recipe\"/>\r\n                     <div className=\"card-body text-capitalize\">\r\n                         <h6>{title}</h6>\r\n                         <h6 className=\"text-warning text-slanted\">\r\n                             provided by {publisher}\r\n                         </h6>\r\n                     </div>\r\n                     <div className=\"card-footer\">\r\n                         <button type=\"button\"\r\n                         className=\"btn btn-primary text-capitalize\" onClick={handleDetails}>Details</button>\r\n                         <a href={source_url} className='btn btn-success mx-2 text-capitalize ' target='_blank' rel='noopener noreferrer'>Recipe Url</a>\r\n                     </div>\r\n                 </div>\r\n             </div>\r\n\r\n           </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Recepie\r\n","import React, { Component } from 'react'\r\n\r\n\r\nclass ReceipeSearch extends Component {\r\n    \r\n    render() {\r\n        const { value,handleSubmit,handleChange } = this.props;\r\n        return (\r\n\r\n            <React.Fragment>\r\n               <div className=\"container\">\r\n                   <div className=\"row\">\r\n                       <div className=\"col-10 mx-auto col-md-8 mt-5 text-center\">\r\n                           <h1 className=\"text-slanted text-capitalize\">\r\n                               Search for recipe with <strong className=\"text-danger\">MyResturant</strong>\r\n                           </h1>\r\n                           <form className=\"mt-4\" onSubmit={handleSubmit}>\r\n                               <label htmlFor=\"search\" className=\"text-capitalize\">\r\n                                   Type recipes separated by comma\r\n                               </label>\r\n                            <div className=\"input-group\">\r\n                                <input type=\"text\" name=\"search\"\r\n                                placeholder=\"chicken,onion,carrots\" className=\"form-control\"\r\n                                value={value}\r\n                                onChange={handleChange} />\r\n                                <div className=\"input-group-append\">\r\n                                    <button type=\"submit\" className=\"input-group-text bg-primary text-white\">\r\n                                        <i className=\"fas fa-search\"></i>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                           </form>\r\n                       </div>\r\n                   </div>\r\n               </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ReceipeSearch\r\n","import React, { Component } from 'react'\r\nimport Recipe from './Recepie'\r\nimport RecipeSearch from './ReceipeSearch'\r\nimport '../App.css'\r\n\r\nclass ReceipeList extends Component {\r\n    \r\n    render() {\r\n        const { \r\n            recipes,\r\n            handleDetails,\r\n            value,\r\n            handleSubmit,\r\n            handleChange ,\r\n            error }= this.props;\r\n        return (\r\n            <React.Fragment>\r\n                \r\n                <RecipeSearch value={value} handleChange={handleChange}\r\n                handleSubmit={handleSubmit}/>\r\n                <div className=\"container my-5\">\r\n                {/*title */}\r\n                    <div className=\"row\">\r\n                        <div className=\"col-10 mx-auto col-md-6 text-center text-uppercase mb-3\">\r\n                           <h1 className=\"text-slanted\">Recipe List</h1>\r\n                        </div>\r\n                    </div>\r\n                    {/*end of title */}\r\n                    <div className=\"row\">\r\n                        { error ? (<h1 className='text-danger text-center'>{error}\r\n                            </h1>\r\n                            ) : (\r\n                                recipes.map(recipe =>{\r\n                                return (<Recipe key={recipe.recipe_id}  recipe={recipe} \r\n                                handleDetails={() => handleDetails(0,recipe.recipe_id)} />);\r\n                        })\r\n\r\n                            ) }\r\n                       \r\n                    </div>\r\n                </div>\r\n               \r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ReceipeList\r\n","export const recipe = {\n  f2f_url: \"http://food2fork.com/view/35382\",\n  image_url:\n    \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\n  ingredients: [\n    \"2 jalapeno peppers, cut in half lengthwise and seeded\",\n    \"2 slices sour dough bread\",\n    \"1 tablespoon butter, room temperature\",\n    \"2 tablespoons cream cheese, room temperature\",\n    \"1/2 cup jack and cheddar cheese, shredded\",\n    \"1 tablespoon tortilla chips, crumbled\"\n  ],\n  publisher: \"Closet Cooking\",\n  publisher_url: \"http://closetcooking.com\",\n  source_url:\n    \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\",\n  title: \"Jalapeno Popper Grilled Cheese Sandwich\"\n};\n","import React, { Component } from 'react'\r\nimport {recipe} from '../tempDetails';\r\n\r\n\r\nclass ReceipeDetails extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             recipe:recipe,\r\n             url :`https://www.food2fork.com/api/get?key=4f9c5c743665975f0f05d8cd11eea0fa&rId=${this.props.id}`\r\n        }\r\n    }\r\n\r\n  async componentDidMount(){\r\n    try{\r\n      const data = await fetch(this.state.url);\r\n      const jsonData = await data.json();\r\n      this.setState({\r\n        recipe:jsonData.recipe\r\n      });\r\n\r\n    }catch(error){\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n    \r\n    render() {\r\n        const { \r\n            image_url,\r\n            publisher,\r\n            publisher_url,\r\n            source_url,\r\n            title,\r\n            ingredients\r\n        }=this.state.recipe;\r\n\r\n    const{handleIndex}=this.props\r\n\r\n        return (\r\n            <React.Fragment>\r\n              <div className=\"container\">\r\n                  <div className=\"row\">\r\n                      <div className=\"col-10 mx-auto col-md-6 my-3\">\r\n                          <button type=\"button\" className=\"btn btn-warning mb-5 text-capitalize\"\r\n                          onClick={()=>handleIndex(1)}>\r\n                          Back to recipe</button>\r\n                         <img src={image_url} className=\"d-block w-100\" alt=\"recipe\" />\r\n                      </div>\r\n                      {/*details*/}\r\n                      <div className=\"col-10 mx-auto col-md-6 my-3\">\r\n                          <h6 className=\"text-uppercase\">{title}</h6>\r\n                          <h6 className=\"text-warning tex-capitalize tex-slanted\">\r\n                              Provided by {publisher}\r\n                          </h6>\r\n                          <a href={publisher_url}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                          className=\"btn btn-primary mt-2 text-capitalize\">\r\n                          Publisher webpage</a>\r\n                          <a href={source_url}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                          className=\"btn btn-success mx-3 mt-2 text-capitalize\">\r\n                          Recipe Url</a>\r\n                          <ul className=\"list-group mt-4\">\r\n                              <h2 className=\"mt-3 mb-4\">Ingredients</h2>\r\n                              {\r\n                                  ingredients.map((item,index) => {\r\n                                      return(\r\n                                          <li key={index} className=\"list-group-item text-slanted\">\r\n                                              {item}\r\n                                          </li>\r\n                                      )\r\n                                  })\r\n                              }\r\n                          </ul>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ReceipeDetails\r\n","import React, {Component} from 'react';\nimport {recipes} from './tempList'\nimport RecipeList from './components/ReceipeList'\nimport RecipeDetails from './components/ReceipeDetails'\n\n\nimport './App.css';\n\nclass App extends Component{\n  state = {\n    recipes: recipes,\n    url : \"https://www.food2fork.com/api/search?key=4f9c5c743665975f0f05d8cd11eea0fa\",\n    base_url:\"https://www.food2fork.com/api/search?key=4f9c5c743665975f0f05d8cd11eea0fa\",\n    details_id:35389,\n    pageIndex:1,\n    search:'',\n    query:'&q=',\n    error:''\n\n  };\n\n  async getRecipes(){\n    try{\n      const data = await fetch(this.state.url);\n      const jsonData = await data.json();\n      if(jsonData.recipes.length===0){\nthis.setState(()=>{\n  return{ error:'Sorry not found any results '}\n})\n      }\n      else {\n        this.setState(()=>{\n          return { recipes :jsonData.recipes}\n        })\n      }\n\n    }catch(error){\n      console.log(error);\n    }\n  }\n\n  componentDidMount(){\n    this.getRecipes()\n  }\n\n  displayPage= (index) => {\n    switch(index){\n      default:\n      case 1:\n        return(\n        <RecipeList \n          recipes={this.state.recipes} \n          handleDetails={this.handleDetails} \n          value={this.state.search}\n          handleChange={this.handleChange}\n          handleSubmit={this.handleSubmit} \n          error={this.state.error}\n          />)\n      case 0:\n        return(\n        <RecipeDetails \n          id={this.state.details_id} \n          handleIndex={this.handleIndex}/> )\n\n    }\n  }\n\n  handleDetails = (index,id) => {\n    this.setState({\n      pageIndex: index,\n      details_id: id\n    })\n  }\n\n  handleIndex = index => {\n    this.setState({\n    pageIndex: index\n    })\n  }\n\n  handleChange= (e) =>{\n    this.setState({\n      search:e.target.value\n    },()=>{\n      console.log(this.state.search);\n    })\n  }\n\n  handleSubmit = (e) =>{\n    e.preventDefault();\n    const { base_url , query, search} = this.state;\n\n    this.setState(() =>{\n      return{ url:`${base_url}${query}${search}`,search:\"\"}\n    },()=>{\n      this.getRecipes();\n    })\n    \n    \n  };\n\n  render(){\n        //console.log(this.state.recipes)\n      return (\n    <React.Fragment>\n      {this.displayPage(this.state.pageIndex)}\n     </React.Fragment>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}